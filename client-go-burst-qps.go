package globalvar

import (
	"k8s.io/client-go/kubernetes"
	"k8s.io/client-go/rest"
)
/*
В клиентской библиотеке client-go для Kubernetes, конфигурация REST-клиента позволяет управлять различными параметрами взаимодействия с API-сервером. 
Один из таких параметров — это burst, который определяет максимальное количество запросов, которое может быть отправлено одновременно при достижении лимита скорости (rate limit).

### Что такое burst?
Burst — это параметр, определяющий максимально допустимое число параллельных запросов к API-серверу, когда лимит скорости временно превышен. 
Это полезно в ситуациях, когда необходимо быстро отправить несколько запросов за короткий промежуток времени, даже если они превышают установленный rate limit.

По умолчанию значение burst равно 10, то есть одновременно могут выполняться до 10 запросов, даже если текущий rate limit уже исчерпан.

### Как изменить burst?
Чтобы изменить значение burst, нужно настроить соответствующий параметр в конфигурации REST-клиента:
/*
var (
	/*
		// outside cluster client
		config, _    = clientcmd.BuildConfigFromFlags("", os.Getenv("KUBECONFIG"))
		Clientset, _ = kubernetes.NewForConfig(config)

			// inside cluster client
			// creates the in-cluster config
			config, _ = rest.InClusterConfig()

			// creates the clientset
			clientset, _ = getcrname.NewForConfig(config)

	*/

	config = &rest.Config{
		QPS:   100,
		Burst: 20, // Установить burst равным 20
	}

	Clientset, _ = kubernetes.NewForConfig(config)
)
/*
В этом примере мы установили значение Burst равным 20, что означает, что REST-клиент сможет отправлять до 20 запросов одновременно, даже если текущие ограничения на скорость запросов будут превышены.

### Взаимодействие с QPS (Queries Per Second)
Параметр QPS (queries per second) определяет максимальную скорость отправки запросов к API-серверу. Вместе с параметром Burst, эти настройки позволяют гибко контролировать взаимодействие клиента с API-сервером Kubernetes.

Таким образом, настройка burst дает возможность клиенту кратковременно превышать установленные ограничения на количество запросов в секунду, что может быть полезным в некоторых сценариях использования.
*/
